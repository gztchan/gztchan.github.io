{"version":3,"sources":["webpack:///./src/components/post-link/index.js","webpack:///./src/pages/posts.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/@babel/runtime/helpers/objectDestructuringEmpty.js","webpack:///./src/components/avatar/index.js","webpack:///./src/components/header/index.js","webpack:///./src/layouts/general/index.js"],"names":["post_link","_ref","data","Object","core_browser_esm","style","margin","fontSize","marginRight","date","gatsby_browser_entry","to","path","title","Template","general","className","allMarkdownRemark","edges","map","_ref2","node","frontmatter","query","m","module","exports","require","default","React","createContext","PropTypes","object","string","isRequired","func","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","propTypes","shape","pathname","obj","TypeError","Avatar","objectDestructuringEmpty_default","_1891962723","react_default","a","Fragment","avatarStyles","wrap","src","site","siteMetadata","author","avatar","alt","Header","siteTitle","_3564895773","background","headerStyle","text","marginBottom","name","description","textAlign","nav","l","padding","display","defaultProps","GeneralLayout","children","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","generalStyles","main","header","_components_header__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-pages-posts-js-3cf32f7082f47b45c833.js","sourcesContent":["import React from \"react\"\nimport { Link }  from 'gatsby'\n\nexport default ({ data }) => (\n  <p style={{ margin: 10 }}><span style={{ fontSize: '12px', marginRight: 10 }}>{data.date}</span><Link to={data.path}>{data.title}</Link></p>\n)\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport GeneralLayout from '../layouts/general'\n\n// import postStyle from '../styles/templates/post.module.css'\n\nimport PostLink from '../components/post-link'\n\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  return (\n    <GeneralLayout>\n      <div className={{}}>\n        {data.allMarkdownRemark.edges.map(({ node }) => {\n          return <PostLink data={node.frontmatter} />\n        })}\n      </div>\n    </GeneralLayout>\n  )\n}\n\nexport const query = graphql`{\n  allMarkdownRemark(\n    sort: { order: DESC, fields: [frontmatter___date] }\n    limit: 1000\n  ) {\n    edges {\n      node {\n        frontmatter {\n          path\n          title\n          date\n        }\n      }\n    }\n  }\n}\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nmodule.exports = _objectDestructuringEmpty;","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport avatarStyles from './avatar.module.css'\n\nconst Avatar = ({}) => {\n  const data = useStaticQuery(graphql`\n    query AvatarQuery {\n      site {\n        siteMetadata {\n          author {\n            avatar\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div className={avatarStyles.wrap}>\n        <img src={data.site.siteMetadata.author.avatar} alt={true} />\n      </div>\n    </>\n  )\n}\n\nexport default Avatar\n","import { useStaticQuery, graphql, Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport Avatar from '../avatar'\n\nimport headerStyle from './header.module.css'\n\nconst Header = ({ siteTitle }) => {\n  const data = useStaticQuery(graphql`\n    query HeaderQuery {\n      site {\n        siteMetadata {\n          description\n          author {\n            name\n          }\n          nav {\n            name\n            path\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header style={{ background: `#f7f7f7` }}>\n      <div>\n        <Avatar />\n        <div className={headerStyle.text}>\n          <p style={{ fontSize: '1rem', marginBottom: '1rem' }}>{data.site.siteMetadata.author.name}</p>\n          <p>{data.site.siteMetadata.description}</p>\n        </div>\n        <nav style={{ textAlign: 'center'}}>\n          <ul>\n            {data.site.siteMetadata.nav.map(l => {\n              return <li style={{ padding: '20px 10px', margin: '0 10px', display: 'inline-block' }}><Link to={l.path} >{l.name}</Link></li>\n            })}\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from '../../components/header'\nimport generalStyles from './general.module.css'\n\nconst GeneralLayout = ({ children }) => {\n  return (\n    <>\n      <div className={generalStyles.general}>\n        <main\n          className={generalStyles.main}\n        >\n          <div className={generalStyles.header}>\n            <Header />\n          </div>\n          {children}\n        </main>\n        {/* <div className={generalStyles.sidemenu}>\n        </div> */}\n      </div>\n    </>\n  )\n}\n\nGeneralLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default GeneralLayout\n"],"sourceRoot":""}