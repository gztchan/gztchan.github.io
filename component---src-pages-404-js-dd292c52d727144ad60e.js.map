{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","title","SEO","_ref","description","lang","meta","site","_public_static_d_1464412309_json__WEBPACK_IMPORTED_MODULE_2__","data","metaDescription","siteMetadata","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"6HAYeA,UARM,kBACnBC,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,CAAKC,MAAM,mBACXH,OAAAC,EAAA,EAAAD,CAAA,uBACAA,OAAAC,EAAA,EAAAD,CAAA,6KCIJ,SAASI,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAgBFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEN,OAAAc,EAAA,EAAAd,CAACe,EAAAC,EAAD,CACEC,eAAgB,CACdV,QAEFJ,MAAOA,EACPe,cAAa,QAAUT,EAAKI,aAAaV,MACzCK,KAAM,CACJ,CACEW,KAAI,cACJC,QAASR,GAEX,CACES,SAAQ,WACRD,QAASjB,GAEX,CACEkB,SAAQ,iBACRD,QAASR,GAEX,CACES,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASX,EAAKI,aAAaS,OAAOH,MAEpC,CACEA,KAAI,gBACJC,QAASjB,GAEX,CACEgB,KAAI,sBACJC,QAASR,IAEXW,OAAOf,KAKfJ,EAAIoB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIqB,UAAY,CACdnB,YAAaoB,IAAUC,OACvBpB,KAAMmB,IAAUC,OAChBnB,KAAMkB,IAAUE,QAAQF,IAAUG,QAClC1B,MAAOuB,IAAUC,OAAOG,YAGX1B","file":"component---src-pages-404-js-dd292c52d727144ad60e.js","sourcesContent":["import React from \"react\"\n\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <div>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </div>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              name\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author.name,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}