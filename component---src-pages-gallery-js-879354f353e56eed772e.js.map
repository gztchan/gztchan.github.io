{"version":3,"sources":["webpack:///./src/pages/gallery.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/avatar/index.js","webpack:///./src/components/header/index.js","webpack:///./src/components/sidebar/index.js","webpack:///./src/layouts/general/index.js","webpack:///./src/components/post-link/index.js"],"names":["query","GalleryPage","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts_general__WEBPACK_IMPORTED_MODULE_2__","className","allAlbumsJson","edges","map","_ref2","node","_components_post_link__WEBPACK_IMPORTED_MODULE_3__","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","propTypes","shape","pathname","Avatar","objectDestructuringEmpty_default","_1891962723","core_browser_esm","react_default","a","Fragment","avatarStyles","wrap","src","site","siteMetadata","author","avatar","alt","Header","siteTitle","_3564895773","style","background","headerStyle","text","fontSize","marginBottom","name","description","textAlign","nav","l","padding","margin","display","gatsby_browser_entry","to","path","defaultProps","liStyle","boxShadow","cursor","PayCode","url","sidebarStyle","payCode","Sidebar","children","_useState","useState","visible","setVisible","_40698074","sidebar","marginTop","item","marginRight","index_es","icon","Icons","payWrap","onClick","BrandIcons","sidebar_PayCode","alipay","GeneralLayout","generalStyles","general","main","header","rightSide","__webpack_exports__","position","date","gatsby__WEBPACK_IMPORTED_MODULE_2__","left","title"],"mappings":"0KAoBaA,EAAK,aAaHC,UA3BK,SAAAC,GAEd,IADJC,EACID,EADJC,KAEA,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,OAAKG,UAAW,IACbJ,EAAKK,cAAcC,MAAMC,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAC/B,OAAOR,OAAAC,EAAA,EAAAD,CAACS,EAAA,EAAD,CAAUV,KAAMS,+ICANE,IAAMC,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,0BCvEtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,+XCKzCK,EAAmB,SAAAxB,GAAiC,IAA9ByB,EAA8BzB,EAA9ByB,SAAUC,EAAoB1B,EAApB0B,cACpC,OAAKA,EAGEd,IAAMe,cAAcC,IAApB1B,OAAA2B,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBO,UAAY,CAC3BN,SAAUX,IAAUkB,MAAM,CACxBC,SAAUnB,IAAUE,OAAOC,aAC1BA,YAGUO,mTCIAU,EAtBA,SAAAlC,GAAQmC,IAAAnC,GACrB,IAAMC,EAAOmC,EAAAnC,KAYb,OACEC,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAC,EAAAC,SAAA,KACEtC,OAAAmC,EAAA,EAAAnC,CAAA,OAAKG,UAAWoC,IAAaC,MAC3BxC,OAAAmC,EAAA,EAAAnC,CAAA,OAAKyC,IAAK1C,EAAK2C,KAAKC,aAAaC,OAAOC,OAAQC,KAAK,yBCZvDC,EAAS,SAAAjD,GAAmBA,EAAhBkD,UAAgB,IAC1BjD,EAAOkD,EAAAlD,KAiBb,OACEC,OAAAmC,EAAA,EAAAnC,CAAA,UAAQkD,MAAO,CAAEC,WAAU,YACzBnD,OAAAmC,EAAA,EAAAnC,CAAA,WACEA,OAAAmC,EAAA,EAAAnC,CAAC6C,EAAD,MACA7C,OAAAmC,EAAA,EAAAnC,CAAA,OAAKG,UAAWiD,IAAYC,MAC1BrD,OAAAmC,EAAA,EAAAnC,CAAA,KAAGkD,MAAO,CAAEI,SAAU,OAAQC,aAAc,SAAWxD,EAAK2C,KAAKC,aAAaC,OAAOY,MACrFxD,OAAAmC,EAAA,EAAAnC,CAAA,SAAID,EAAK2C,KAAKC,aAAac,cAE7BzD,OAAAmC,EAAA,EAAAnC,CAAA,OAAKkD,MAAO,CAAEQ,UAAW,WACvB1D,OAAAmC,EAAA,EAAAnC,CAAA,UACGD,EAAK2C,KAAKC,aAAagB,IAAIrD,IAAI,SAAAsD,GAC9B,OAAO5D,OAAAmC,EAAA,EAAAnC,CAAA,MAAIkD,MAAO,CAAEW,QAAS,YAAaC,OAAQ,SAAUC,QAAS,iBAAkB/D,OAAAmC,EAAA,EAAAnC,CAACgE,EAAA,EAAD,CAAMC,GAAIL,EAAEM,MAAQN,EAAEJ,cAS3HT,EAAOlB,UAAY,CACjBmB,UAAWpC,IAAUE,QAGvBiC,EAAOoB,aAAe,CACpBnB,UAAS,IAGID,0hBC7CTqB,EAAU,CACdL,QAAS,QACTF,QAAS,YACTN,aAAc,GACdJ,WAAY,UACZkB,UAAW,mCACXC,OAAQ,WAGJC,EAAU,SAAAzE,GAAA,IAAG0E,EAAH1E,EAAG0E,IAAH,OACdxE,OAAAmC,EAAA,EAAAnC,CAAA,OAAKG,UAAWsE,IAAaC,SAC3B1E,OAAAmC,EAAA,EAAAnC,CAAA,OAAKyC,IAAK+B,EAAK1B,KAAK,MAmDT6B,EA/CC,SAAApE,GAAkBA,EAAfqE,SAAe,IAAAC,EAEFC,oBAAS,GAAhCC,EAFyBF,EAAA,GAEhBG,EAFgBH,EAAA,GAI1B9E,EAAOkF,EAAAlF,KAeb,OACEC,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAC,EAAAC,SAAA,KACEtC,OAAAmC,EAAA,EAAAnC,CAAA,OAAKG,UAAWsE,IAAaS,SAC3BlF,OAAAmC,EAAA,EAAAnC,CAAA,OAAKkD,MAAO,CAAEiC,UAAW,KACvBnF,OAAAmC,EAAA,EAAAnC,CAAA,UACGD,EAAK2C,KAAKC,aAAagB,IAAIrD,IAAI,SAAA8E,GAC9B,OACEpF,OAAAmC,EAAA,EAAAnC,CAAA,MAAIkD,MAAOkB,GACTpE,OAAAmC,EAAA,EAAAnC,CAACgE,EAAA,EAAD,CAAMC,GAAImB,EAAKlB,MACblE,OAAAmC,EAAA,EAAAnC,CAAA,QAAMkD,MAAO,CAAEmC,YAAa,KAAMrF,OAAAmC,EAAA,EAAAnC,CAACsF,EAAA,EAAD,CAAiBC,KAAMC,EAAMJ,EAAKG,SACpEvF,OAAAmC,EAAA,EAAAnC,CAAA,YAAOoF,EAAK5B,UAKpBxD,OAAAmC,EAAA,EAAAnC,CAAA,MAAIG,UAAWsE,IAAagB,QAASvC,MAAOkB,EAASsB,QAAS,kBAAMV,GAAYD,KAC9E/E,OAAAmC,EAAA,EAAAnC,CAAA,QAAMkD,MAAO,CAAEmC,YAAa,KAAMrF,OAAAmC,EAAA,EAAAnC,CAACsF,EAAA,EAAD,CAAiBC,KAAMI,OACzD3F,OAAAmC,EAAA,EAAAnC,CAAA,YAAO+E,EAAU,IAAM,WACtBA,EAAU/E,OAAAmC,EAAA,EAAAnC,CAAC4F,EAAD,CAASpB,IAAKzE,EAAK2C,KAAKC,aAAakD,SAAa,6BCtDrEC,EAAgB,SAAAhG,GAAkB,IAAf8E,EAAe9E,EAAf8E,SACvB,OACE5E,OAAAmC,EAAA,EAAAnC,CAAAoC,EAAAC,EAAAC,SAAA,KACEtC,OAAAmC,EAAA,EAAAnC,CAAA,OAAKG,UAAW4F,IAAcC,SAC5BhG,OAAAmC,EAAA,EAAAnC,CAAA,QAAMG,UAAW4F,IAAcE,MAC7BjG,OAAAmC,EAAA,EAAAnC,CAAA,OAAKG,UAAW4F,IAAcG,QAC5BlG,OAAAmC,EAAA,EAAAnC,CAACkG,EAAA,EAAD,OAEDtB,GAEH5E,OAAAmC,EAAA,EAAAnC,CAAA,OAAKG,UAAW4F,IAAcI,WAC5BnG,OAAAmC,EAAA,EAAAnC,CAACkF,EAAD,UAOVY,EAAcjE,UAAY,CACxB+C,SAAUhE,IAAUJ,KAAKO,YAGZ+E,oEC1BAM,EAAA,WAAAtG,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACbC,OAAAC,EAAA,EAAAD,CAAA,KAAGkD,MAAO,CAAEmD,SAAU,WAAYvC,OAAQ,KACxC9D,OAAAC,EAAA,EAAAD,CAAA,QAAMkD,MAAO,CAAEI,SAAU,OAAQ+B,YAAa,KAAOtF,EAAKuG,MAC1DtG,OAAAC,EAAA,EAAAD,CAACuG,EAAA,EAAD,CAAMrD,MAAO,CAAEmD,SAAU,WAAYG,KAAM,IAAKvC,GAAIlE,EAAKmE,MAAOnE,EAAK0G","file":"component---src-pages-gallery-js-879354f353e56eed772e.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport GeneralLayout from '../layouts/general'\nimport PostLink from '../components/post-link'\n\nconst GalleryPage = ({\n  data, // this prop will be injected by the GraphQL query below.\n}) => {\n  return (\n    <GeneralLayout>\n      <div className={{}}>\n        {data.allAlbumsJson.edges.map(({ node }) => {\n          return <PostLink data={node} />\n        })}\n      </div>\n    </GeneralLayout>\n  )\n}\n\nexport const query = graphql`{\n  allAlbumsJson(limit: 1000) {\n    edges {\n      node {\n        title\n        path\n        date\n      }\n    }\n  }\n}\n`\n\nexport default GalleryPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport avatarStyles from './avatar.module.css'\n\nconst Avatar = ({}) => {\n  const data = useStaticQuery(graphql`\n    query AvatarQuery {\n      site {\n        siteMetadata {\n          author {\n            avatar\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div className={avatarStyles.wrap}>\n        <img src={data.site.siteMetadata.author.avatar} alt={true} />\n      </div>\n    </>\n  )\n}\n\nexport default Avatar\n","import { useStaticQuery, graphql, Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport Avatar from '../avatar'\n\nimport headerStyle from './header.module.css'\n\nconst Header = ({ siteTitle }) => {\n  const data = useStaticQuery(graphql`\n    query HeaderQuery {\n      site {\n        siteMetadata {\n          description\n          author {\n            name\n          }\n          nav {\n            name\n            path\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header style={{ background: `#f7f7f7` }}>\n      <div>\n        <Avatar />\n        <div className={headerStyle.text}>\n          <p style={{ fontSize: '1rem', marginBottom: '1rem' }}>{data.site.siteMetadata.author.name}</p>\n          <p>{data.site.siteMetadata.description}</p>\n        </div>\n        <nav style={{ textAlign: 'center'}}>\n          <ul>\n            {data.site.siteMetadata.nav.map(l => {\n              return <li style={{ padding: '20px 10px', margin: '0 10px', display: 'inline-block' }}><Link to={l.path} >{l.name}</Link></li>\n            })}\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { useState } from \"react\"\nimport { useStaticQuery, graphql, Link } from 'gatsby'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as Icons from '@fortawesome/free-solid-svg-icons'\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons'\n\nimport sidebarStyle from './sidebar.module.css'\n\nconst liStyle = {\n  display: 'block',\n  padding: '10px 16px',\n  marginBottom: 15,\n  background: '#f7f7f7',\n  boxShadow: '2px 2px 10px rgba(0, 0, 0, 0.15)',\n  cursor: 'pointer'\n}\n\nconst PayCode = ({ url }) => (\n  <div className={sidebarStyle.payCode}>\n    <img src={url} alt={true}/>\n  </div>\n)\n\nconst Sidebar = ({ children }) => {\n\n  const [visible, setVisible] = useState(false)\n\n  const data = useStaticQuery(graphql`\n    query NavQuery {\n      site {\n        siteMetadata {\n          nav {\n            name\n            path\n            icon\n          }\n          alipay\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div className={sidebarStyle.sidebar}>\n        <nav style={{ marginTop: 50 }}>\n          <ul>\n            {data.site.siteMetadata.nav.map(item => {\n              return (\n                <li style={liStyle}>\n                  <Link to={item.path}>\n                    <span style={{ marginRight: 10 }}><FontAwesomeIcon icon={Icons[item.icon]}/></span>\n                    <span>{item.name}</span>\n                  </Link>\n                </li>\n              )\n            })}\n            <li className={sidebarStyle.payWrap} style={liStyle} onClick={() => setVisible(!visible)}>\n              <span style={{ marginRight: 10 }}><FontAwesomeIcon icon={BrandIcons.faAlipay}/></span>\n              <span>{visible ? '❌' : 'Support'}</span>\n              {visible ? <PayCode url={data.site.siteMetadata.alipay} /> : null}\n            </li>\n          </ul>\n        </nav>\n\n      </div>\n    </>\n  )\n}\n\nexport default Sidebar\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from '../../components/header'\nimport Sidebar from '../../components/sidebar'\nimport generalStyles from './general.module.css'\n\nconst GeneralLayout = ({ children }) => {\n  return (\n    <>\n      <div className={generalStyles.general} >\n        <main className={generalStyles.main} >\n          <div className={generalStyles.header} >\n            <Header />\n          </div>\n          {children}\n        </main>\n        <div className={generalStyles.rightSide}>\n          <Sidebar />\n        </div>\n      </div>\n    </>\n  )\n}\n\nGeneralLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default GeneralLayout\n","import React from \"react\"\nimport { Link }  from 'gatsby'\n\nexport default ({ data }) => (\n  <p style={{ position: 'relative', margin: 10 }}>\n    <span style={{ fontSize: '12px', marginRight: 10 }}>{data.date}</span>\n    <Link style={{ position: 'absolute', left: 80 }}to={data.path}>{data.title}</Link>\n  </p>\n)\n"],"sourceRoot":""}