{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/avatar/index.js","webpack:///./src/components/header/index.js","webpack:///./src/components/sidebar/index.js","webpack:///./src/layouts/general/index.js"],"names":["Template","_ref","markdownRemark","data","frontmatter","html","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_layouts_general__WEBPACK_IMPORTED_MODULE_2__","className","postStyle","container","post","title","class","date","content","dangerouslySetInnerHTML","__html","query","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","propTypes","shape","pathname","Avatar","objectDestructuringEmpty_default","_1891962723","core_browser_esm","react_default","a","Fragment","avatarStyles","wrap","src","site","siteMetadata","author","avatar","alt","Header","siteTitle","_3564895773","style","background","headerStyle","text","fontSize","marginBottom","name","description","textAlign","nav","map","l","padding","margin","display","gatsby_browser_entry","to","path","defaultProps","liStyle","boxShadow","cursor","PayCode","url","sidebarStyle","payCode","Sidebar","_ref2","children","_useState","useState","visible","setVisible","_40698074","sidebar","marginTop","item","marginRight","index_es","icon","Icons","payWrap","onClick","BrandIcons","sidebar_PayCode","alipay","GeneralLayout","generalStyles","general","main","header","rightSide","node"],"mappings":"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","file":"component---src-templates-post-js-3102803e1a4bb98dd8ce.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport GeneralLayout from '../layouts/general'\n\nimport postStyle from '../styles/templates/post.module.css'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <GeneralLayout>\n      <div className={postStyle.container}>\n        <div className={postStyle.post}>\n          <h1>{frontmatter.title}</h1>\n          <p class={postStyle.date}>{frontmatter.date}</p>\n          <div className={postStyle.content} dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      </div>\n    </GeneralLayout>\n  )\n}\n\nexport const query = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport avatarStyles from './avatar.module.css'\n\nconst Avatar = ({}) => {\n  const data = useStaticQuery(graphql`\n    query AvatarQuery {\n      site {\n        siteMetadata {\n          author {\n            avatar\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div className={avatarStyles.wrap}>\n        <img src={data.site.siteMetadata.author.avatar} alt={true} />\n      </div>\n    </>\n  )\n}\n\nexport default Avatar\n","import { useStaticQuery, graphql, Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport Avatar from '../avatar'\n\nimport headerStyle from './header.module.css'\n\nconst Header = ({ siteTitle }) => {\n  const data = useStaticQuery(graphql`\n    query HeaderQuery {\n      site {\n        siteMetadata {\n          description\n          author {\n            name\n          }\n          nav {\n            name\n            path\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <header style={{ background: `#f7f7f7` }}>\n      <div>\n        <Avatar />\n        <div className={headerStyle.text}>\n          <p style={{ fontSize: '1rem', marginBottom: '1rem' }}>{data.site.siteMetadata.author.name}</p>\n          <p>{data.site.siteMetadata.description}</p>\n        </div>\n        <nav style={{ textAlign: 'center'}}>\n          <ul>\n            {data.site.siteMetadata.nav.map(l => {\n              return <li style={{ padding: '20px 10px', margin: '0 10px', display: 'inline-block' }}><Link to={l.path} >{l.name}</Link></li>\n            })}\n          </ul>\n        </nav>\n      </div>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { useState } from \"react\"\nimport { useStaticQuery, graphql, Link } from 'gatsby'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as Icons from '@fortawesome/free-solid-svg-icons'\nimport * as BrandIcons from '@fortawesome/free-brands-svg-icons'\n\nimport sidebarStyle from './sidebar.module.css'\n\nconst liStyle = {\n  display: 'block',\n  padding: '10px 16px',\n  marginBottom: 15,\n  background: '#f7f7f7',\n  boxShadow: '2px 2px 10px rgba(0, 0, 0, 0.15)',\n  cursor: 'pointer'\n}\n\nconst PayCode = ({ url }) => (\n  <div className={sidebarStyle.payCode}>\n    <img src={url} alt={true}/>\n  </div>\n)\n\nconst Sidebar = ({ children }) => {\n\n  const [visible, setVisible] = useState(false)\n\n  const data = useStaticQuery(graphql`\n    query NavQuery {\n      site {\n        siteMetadata {\n          nav {\n            name\n            path\n            icon\n          }\n          alipay\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <div className={sidebarStyle.sidebar}>\n        <nav style={{ marginTop: 50 }}>\n          <ul>\n            {data.site.siteMetadata.nav.map(item => {\n              return (\n                <li style={liStyle}>\n                  <Link to={item.path}>\n                    <span style={{ marginRight: 10 }}><FontAwesomeIcon icon={Icons[item.icon]}/></span>\n                    <span>{item.name}</span>\n                  </Link>\n                </li>\n              )\n            })}\n            <li className={sidebarStyle.payWrap} style={liStyle} onClick={() => setVisible(!visible)}>\n              <span style={{ marginRight: 10 }}><FontAwesomeIcon icon={BrandIcons.faAlipay}/></span>\n              <span>{visible ? '❌' : 'Support'}</span>\n              {visible ? <PayCode url={data.site.siteMetadata.alipay} /> : null}\n            </li>\n          </ul>\n        </nav>\n\n      </div>\n    </>\n  )\n}\n\nexport default Sidebar\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from '../../components/header'\nimport Sidebar from '../../components/sidebar'\nimport generalStyles from './general.module.css'\n\nconst GeneralLayout = ({ children }) => {\n  return (\n    <>\n      <div className={generalStyles.general} >\n        <main className={generalStyles.main} >\n          <div className={generalStyles.header} >\n            <Header />\n          </div>\n          {children}\n        </main>\n        <div className={generalStyles.rightSide}>\n          <Sidebar />\n        </div>\n      </div>\n    </>\n  )\n}\n\nGeneralLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default GeneralLayout\n"],"sourceRoot":""}